{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "pnpm dlx projen default",
          "cwd": ".."
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "pnpm pack --pack-destination dist/js"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpm dlx npm-check-updates@16 --upgrade --target=minor --peer --no-deprecated --dep=dev,peer,prod,optional --filter=@types/jest,jest,ts-jest,typescript"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @babel/plugin-proposal-private-property-in-object @babel/plugin-transform-class-static-block @testing-library/jest-dom @testing-library/react @testing-library/user-event @types/jest @types/lodash @types/node @types/react-dom @types/react @types/testing-library__jest-dom @types/uuid @typescript-eslint/eslint-plugin assert-browserify babel-jest babel-loader babel-plugin-named-asset-import babel-preset-react-app browserify-url browserify-util console-browserify crypto-browserify esbuild-plugin-inline-image esbuild-plugin-sass esbuild eslint-config-prettier eslint-config-react-app eslint-config-standard-with-typescript eslint-plugin-import eslint-plugin-n eslint-plugin-promise eslint-plugin-react eslint-webpack-plugin eslint https-browserify jest jest-junit jest-resolve jest-watch-typeahead nock prettier process stream-browserify stream-http ts-jest typescript vm-browserify webpack-dev-server webpack-manifest-plugin webpack workbox-webpack-plugin @aws-sdk/client-s3 @aws-sdk/lib-storage @aws-sdk/xhr-http-handler @aws/clickstream-base-lib @babel/core @cloudscape-design/collection-hooks @cloudscape-design/components @cloudscape-design/design-tokens @cloudscape-design/global-styles @pmmmwh/react-refresh-webpack-plugin @svgr/webpack amazon-quicksight-embedding-sdk axios bfj browserslist camelcase case-sensitive-paths-webpack-plugin classnames css-loader css-minimizer-webpack-plugin dotenv-expand dotenv file-loader fs-extra html-webpack-plugin http-proxy-middleware i18next-browser-languagedetector i18next-http-backend i18next identity-obj-proxy lodash mini-css-extract-plugin moment-timezone moment oidc-client-ts postcss-flexbugs-fixes postcss-loader postcss-normalize postcss-preset-env postcss prompts react-app-polyfill react-dev-utils react-dom react-i18next react-oidc-context react-refresh react-router-dom react resolve-url-loader resolve sass-loader sass semver source-map-loader style-loader tailwindcss terser-webpack-plugin uuid web-vitals"
        },
        {
          "exec": "pnpm dlx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"pnpm dlx projen\"."
}
