AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 29

Resources:
  LocalSamClickStreamDictionaryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        -
          AttributeName: name
          KeyType: HASH
      AttributeDefinitions:
        -
          AttributeName: name
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  LocalSamClickStreamTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
        -
          AttributeName: type
          KeyType: RANGE
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
        -
          AttributeName: type
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  ExpressFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 1024
      Tracing: Active
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBReadPolicy:
            TableName: !Ref LocalSamClickStreamTable
        - DynamoDBReadPolicy:
            TableName: !Ref LocalSamClickStreamDictionaryTable
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: api
          POWERTOOLS_METRICS_NAMESPACE: ClickStream
          LOG_LEVEL: Debug
          CLICK_STREAM_TABLE_NAME: !Ref LocalSamClickStreamTable
          DICTIONARY_TABLE_NAME: !Ref LocalSamClickStreamDictionaryTable
          AWS_URL_SUFFIX: !Ref AWS::URLSuffix
      Events:
        Root:
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY
        Petstore:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: ANY
    Metadata:
      DockerTag: v1
      DockerContext: .
      Dockerfile: Dockerfile
  ExpressFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref ExpressFunction]]
      RetentionInDays: 30
Outputs:
  ExpressApi:
    Description: "API Gateway endpoint URL for Prod stage for Express function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"

