{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "pnpm dlx projen default",
          "cwd": "../../../../.."
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "pnpm pack --pack-destination dist/js"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpm dlx npm-check-updates@16 --upgrade --target=minor --peer --no-deprecated --dep=dev,peer,prod,optional --filter=@types/jest,jest,ts-jest,typescript"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @types/aws-lambda @types/express @types/jest @types/jsonpath-plus @types/jsonwebtoken @types/lodash @types/mock-fs @types/mustache @types/node-fetch @types/node @types/supertest @types/uuid @vercel/ncc aws-sdk-client-mock-jest aws-sdk-client-mock jest jest-junit lodash mock-fs nodemon supertest ts-jest ts-node typescript @aws-lambda-powertools/logger @aws-lambda-powertools/metrics @aws-sdk/client-acm @aws-sdk/client-cloudformation @aws-sdk/client-cloudwatch-events @aws-sdk/client-cloudwatch @aws-sdk/client-dynamodb @aws-sdk/client-ec2 @aws-sdk/client-eventbridge @aws-sdk/client-iam @aws-sdk/client-kafka @aws-sdk/client-quicksight @aws-sdk/client-redshift-data @aws-sdk/client-redshift-serverless @aws-sdk/client-redshift @aws-sdk/client-route-53 @aws-sdk/client-s3 @aws-sdk/client-secrets-manager @aws-sdk/client-sfn @aws-sdk/client-sns @aws-sdk/client-sts @aws-sdk/credential-providers @aws-sdk/lib-dynamodb @aws-sdk/s3-request-presigner @aws-sdk/types @aws-sdk/util-dynamodb @aws/clickstream-base-lib @smithy/node-http-handler @smithy/types @smithy/util-stream-node cidr-block cron-parser csv-parser express-validator express fast-memoize i18next-fs-backend i18next json-difference jsonpath-plus jsonwebtoken jwks-rsa moment-timezone mustache node-fetch p-limit sql-formatter ts-json-object uuid"
        },
        {
          "exec": "pnpm dlx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"pnpm dlx projen\"."
}
